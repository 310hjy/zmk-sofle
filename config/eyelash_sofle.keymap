#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <14 28 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp TILDE   &kp N1     &kp N2        &kp N3  &kp N4     &kp N5       &kp UP_ARROW     &kp N6         &kp N7         &kp N8       &kp N9     &kp N0      &kp BACKSPACE
&kp TAB     &kp Q      &kp W         &kp E   &kp R      &kp T        &kp DOWN_ARROW   &kp Y          &kp U          &kp I        &kp O      &kp P       &kp BSLH
&kp CAPS    &kp A      &kp S         &kp D   &kp F      &kp G        &kp LEFT_ARROW   &kp H          &kp J          &kp K        &kp L      &kp ENTER   &kp APOS
&kp LSHFT   &kp Z      &kp Z         &kp X   &kp C      &kp V        &kp RIGHT_ARROW  &kp N          &kp M          &kp COMMA    &kp DOT    &kp FSLH    &kp RIGHT_SHIFT
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &tog 2  &kp SPACE  &kp SPACE    &kp ENTER        &kp RIGHT_ALT  &kp BACKSPACE  &lt 1 SPACE  &kp LANG1  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = " ";
        };

        layer_1 {
            bindings = <
&kp LS(LG(LEFT))  &kp F1           &kp F2     &kp F3        &kp F4        &kp F5        &mmv MOVE_UP     &kp F6          &kp F7           &kp F8      &kp F9     &kp F10           &kp F11
&kp LA(TAB)       &kp GRAVE        &kp W      &kp E         &kp LG(DOWN)  &kp LG(UP)    &mmv MOVE_DOWN   &msc SCRL_UP    &kp LA(LEFT)     &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&kp DEL           &kp LC(A)        &trans     &kp LA(LEFT)  &trans        &mkp MB5      &mmv MOVE_LEFT   &msc SCRL_DOWN  &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp ENTER         &rgb_ug RGB_OFF  &kp LC(X)  &kp LC(C)     &kp LC(V)     &kp B         &mmv MOVE_RIGHT  &kp B           &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE        &trans           &trans     &trans        &trans        &trans        &mkp LCLK        &trans          &trans           &trans      &trans     &trans
            >;

            display-name = "1";
            sensor-bindings = <&inc_dec_kp LC(TAB) LC(LS(TAB))>;
        };

        layer_2 {
            bindings = <
&kp LG(LS(LEFT))  &kp F1      &kp F2        &kp F3        &kp F4        &kp F5              &mmv MOVE_UP     &kp F6          &kp F7        &kp F8        &kp F9     &kp F10      &kp F11
&kp LA(TAB)       &bt BT_CLR  &kp LC(W)     &kp LA(F4)    &kp LG(DOWN)  &kp LG(UP_ARROW)    &mmv MOVE_DOWN   &msc SCRL_UP    &kp LA(LEFT)  &kp UP_ARROW  &kp F12    &kp UNDER    &kp PLUS
&kp DELETE        &kp LC(A)   &out OUT_BLE  &kp LA(LEFT)  &trans        &trans              &mmv MOVE_LEFT   &msc SCRL_DOWN  &kp LEFT      &kp DOWN      &kp RIGHT  &kp LBRC     &kp RBRC
&kp ENTER         &kp LC(Z)   &kp LC(X)     &kp LC(C)     &kp LC(V)     &kp B               &mmv MOVE_RIGHT  &kp B           &trans        &sys_reset    &soft_off  &bootloader  &trans
&trans            &trans      &trans        &trans        &trans        &trans              &mkp LCLK        &trans          &trans        &trans        &trans     &trans
            >;

            display-name = "♥♥♥";
            sensor-bindings = <&inc_dec_kp LC(PLUS) LC(KP_MINUS)>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
